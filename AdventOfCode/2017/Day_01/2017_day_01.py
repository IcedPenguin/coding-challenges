#!/bin/python
# -*- coding: utf-8 -*-
# http://adventofcode.com/2017/day/1

import sys

###################################################################################################################################################################
############################################################################ PROBLEM 1 ############################################################################

problem_1_captcha = "8921959699917358379152738687295486942379674951154123993731945625269475853372337935682782652791998831971676" \
                    "3479129317798615256623671833261753648723687974716799998336383225791244575688731487922992586447776135713985" \
                    "5548522513798899853896612387146687716264599943289416326727256525173953861534244979466587895429399159924916" \
                    "3644763195738955667953933684116723872636155821283776762936128927237622371911467142862335435144118133231979" \
                    "9595385487162822535854351415786737226571872427691169951497145884484934972627632913511824315569827121884434" \
                    "7387457343656446381799296893222256198484465873714311777937421161581798189554141474236239447612421883232173" \
                    "9141837321263328381946485834724191543699524774226663895175699444284646174571243693492424796124226732413617" \
                    "7757646694662293224372855127328483793449751111433442148626224498291473445211394636124537735184981558485569" \
                    "1778894798219822463298387771923329337634394654439458564233259451453345316753241438267739439225497515276522" \
                    "4244415324625415281957828183269185622472784964957644353866673835775433851868272697322612231568243511648416" \
                    "4842456492519878362572139698898448155839186648395553397221216469389895541271916164841127914941344319289686" \
                    "4258215498543827458438871355879336892721675937111952479183496982825163456282747678364612135596373533447719" \
                    "8673846675165722621242255856239742788339813654946286466145881141474735591388534531894486249767746419224691" \
                    "8394285769598637642894487685149791444387351386231948418178759357298744466976793952629442453126299956494857" \
                    "1142342741129862311311313166798363442745792896227642881893134498151552326647933689596516859342242244584714" \
                    "8187737915671873222171643478528437518759794151981656275342635278284145492172343223619377851851749932567534" \
                    "8387637833252182451597717339753578423692362963671346915152639914954832284983143152621947865386175436415527" \
                    "5865511643923249858589466142474763778413826829226663398467569555747267195129525138917561785436449855933951" \
                    "5389739958819545211247533692238983128437347715323423832829874223341965851285265263242917776896894923462317" \
                    "86335851551413876834969878"


def problem_1_algo(captcha, algo):
    total = 0
    size = len(captcha)
    half = size / 2

    # walk the string, looking for pairs
    for idx in xrange(size):
        if algo == 1:
            if captcha[idx] == captcha[(idx +1) % size]:
                total += int(captcha[idx])

        elif algo == 2: 
            if captcha[idx] == captcha[(idx + half) % size]:
                total += int(captcha[idx])

    return total
### problem_1_algo


def verify_1(algo, captcha, expected):
    actual = problem_1_algo(captcha, algo)
    print expected == actual
### verify_1


def main(args):
    verify_1(1, "1122", 3)
    verify_1(1, "1122", 3)
    verify_1(1, "1111", 4)
    verify_1(1, "1234", 0)
    verify_1(1, "91212129", 9)
    print "Day 1:  algorithm 1 → " + str(problem_1_algo(problem_1_captcha, 1))

    verify_1(2, "1212", 6)
    verify_1(2, "1221", 0)
    verify_1(2, "123425", 4) 
    verify_1(2, "123123", 12)
    verify_1(2, "12131415", 4)
    print "Day 1:  algorithm 2 → " + str(problem_1_algo(problem_1_captcha, 2))
### main


if __name__ == "__main__":
    main(sys.argv)
